import kfp
from kfp import dsl
import kfp.components as components


@dsl.pipeline(name='First Pipeline', description='Applies Decision Tree and Logistic Regression for classification problem.')
def first_pipeline():

    # Loads the yaml manifest for each component
    getdata = kfp.components.load_component_from_file('getdata/getdata.yaml')
    reshapedata = kfp.components.load_component_from_file('reshapedata/reshapedata.yaml')
    modelbuilding = kfp.components.load_component_from_file('modelbuilding/modelbuilding.yaml')
    modelserve = kfp.components.load_component_from_file('modelserve/modelserve.yaml')  

    # Run download_data task
    get_batch_data = getdata()
    # Run tasks "decison_tree" and "logistic_regression" given
    # the output generated by "download_task".
    reshape_data = reshapedata()
    model_build = modelbuilding()

    # Given the outputs from "decision_tree" and "logistic_regression"
    # the component "show_results" is called to print the results.
    model_serve = model_serve()



if __name__ == '__main__':
    kfp.compiler.Compiler().compile(first_pipeline, 'FirstPipeline.yaml')
    # kfp.Client().create_run_from_pipeline_func(basic_pipeline, arguments={})